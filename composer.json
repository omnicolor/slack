{
    "authors": [
        {
            "name": "Omni Adams",
            "email": "omni@digitaldarkness.com"
        }
    ],
    "autoload": {
        "psr-4": {
            "Omnicolor\\Slack\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "captainhook/captainhook-phar": true,
            "captainhook/hook-installer": true
        }
    },
    "description": "Library for creating Slack messages",
    "name": "omnicolor/slack",
    "license": "MIT",
    "minimum-stability": "stable",
    "require": {
        "php": "^8.3"
    },
    "require-dev": {
        "captainhook/captainhook-phar": "^5.23",
        "captainhook/hook-installer": "^1.0",
        "friendsofphp/php-cs-fixer": "^3.59",
        "php-parallel-lint/php-parallel-lint": "^1.4",
        "phpstan/phpstan": "^1.11",
        "phpstan/phpstan-deprecation-rules": "^1.2",
        "phpstan/phpstan-phpunit": "^1.4",
        "phpstan/phpstan-strict-rules": "^1.6",
        "phpunit/phpunit": "^11.2",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.10",
        "vimeo/psalm": "dev-master"
    },
    "scripts": {
        "all": [
            "@lint",
            "@phpcs",
            "@php-cs-fixer",
            "@phpstan",
            "@psalm",
            "@coverage"
        ],
        "coverage": "XDEBUG_MODE=coverage phpunit --coverage-html=vendor/coverage",
        "lint": "parallel-lint --colors src tests",
        "php-cs-fixer": "php-cs-fixer fix --dry-run --config=php_cs.php -v --diff",
        "phpcs": "phpcs -p --colors --cache",
        "phpstan": "phpstan analyze",
        "psalm": "psalm",
        "static": [
            "@lint",
            "@phpstan",
            "@psalm"
        ],
        "style": [
            "@phpcs",
            "@php-cs-fixer"
        ],
        "test": "phpunit"
    },
    "scripts-descriptions": {
        "all": "Run static and style checks, then code coverage",
        "coverage": "Run all tests and create a code coverage report in vendor/coverage",
        "lint": "Run lint across code to make sure it's syntactically valid",
        "phpstan": "Run PHPstan",
        "psalm": "Run Psalm",
        "static": "Run static analysis (Lint, Psalm, and PHPStan)",
        "style": "Run style checks (PHP_Codesniffer and php-cs-fixer)",
        "test": "Run all tests"
    },
    "type": "library"
}
